#!/usr/bin/env bash

: ${HADOOP_HOME:=~/hadoop/hadoop-dist/target/hadoop-3.0.0-alpha2-SNAPSHOT}
export HADOOP_HOME
PATH=$HADOOP_HOME/sbin:$HADOOP_HOME/bin:$PATH

usage() {
  cat <<EOF
$(basename $0) [-r|--restart conf|sslconf] kms|httpfs
EOF
}

run_kms() {
  : ${SSL_ENABLED:=false}

  if [[ $SSL_ENABLED == false ]]; then
    hadoop daemonlog -getlevel localhost:9600 org.apache.hadoop.crypto.key.kms.server.KMS
  fi

  hadoop key delete new1 -f >/dev/null 2>&1 || true
  hadoop key delete new2 -f >/dev/null 2>&1 || true

  hadoop key list
  hadoop key create new1
  hadoop key create new2
  hadoop key list
  hadoop key roll new1
  hadoop key delete new2 -f
  hadoop key list

  echo -e "\nKMS tests passed !!!\n"
}

run_httpfs() {
  : ${SSL_ENABLED:=false}

  hdfs dfs -mkdir -p /tmp
  hdfs dfs -ls /

  httpfs_scheme=webhdfs
  [[ $SSL_ENABLED == true ]] && httpfs_scheme=swebhdfs
  hdfs dfs -ls $httpfs_scheme://localhost:14000/

  if [[ $SSL_ENABLED == false ]]; then
    hadoop daemonlog -getlevel localhost:14000 org.apache.hadoop.fs.http.server.HttpFSServer
  fi

  echo -e "\nHttpFS tests passed !!!\n"
}

pseudo_dist_mode() {
  [[ -z "$@" ]] && return
  $1-dfs.sh
  hdfs --daemon $1 httpfs
  hadoop --daemon $1 kms
}

copy_conf() {
  conf=$1
  cp $mydir/$conf/* $HADOOP_HOME/etc/hadoop
}

mydir=$(dirname $0)

while (( $# > 0 )); do
  case $1 in
    -h|--help)
      usage
      exit
      ;;
    -k|--kill|--stop)
      pseudo_dist_mode stop
      jps
      ;;
    -r|--restart)
      pseudo_dist_mode stop
      copy_conf "$2"
      pseudo_dist_mode start
      jps
      shift # past argument
      ;;
    -s|--start)
      copy_conf "$2"
      pseudo_dist_mode start
      jps
      shift # past argument
      ;;
    -*)
      echo "Unkown option '$1'" >&2
      exit 1
      ;;
    *)
      break
  esac
  shift
done

set -ex

test_env_file=$HADOOP_HOME/etc/hadoop/test_env
[[ -f $test_env_file ]] && . $test_env_file

for test in "$@"; do
  run_$test
done
