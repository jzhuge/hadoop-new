#!/usr/bin/env bash

mydir=$(dirname $0)
myname=$(basename $0)

: ${HADOOP_HOME:=~/hadoop/hadoop-dist/target/hadoop-3.0.0-alpha2-SNAPSHOT}
: ${HADOOP_CONF_DIR:=$HADOOP_HOME/etc/hadoop}
export HADOOP_KEYSTORE_PASSWORD=${HADOOP_KEYSTORE_PASSWORD:-password}

: ${TEST_SERVICES:=hdfs distcp httpfs kms}

usage() {
  cat <<EOF
SYNOPSIS
  $myname start [<conf>]
  $myname restart [<conf>]
  $myname kill|stop
EOF
}

pseudo_dist_mode() {
  local action=$1
  local start_hdfs
  local start_yarn
  local start_httpfs
  local start_kms

  for svc in ${TEST_SERVICES}; do
    case $svc in
      hdfs)
        start_hdfs=yes
        ;;
      distcp|yarn)
        start_yarn=yes
        ;;
      httpfs)
        start_hdfs=yes
        start_httpfs=yes
        ;;
      kms)
        start_kms=yes
        ;;
      *)
        echo "Unknown service '$svc'" >&2
        exit 1
    esac
  done
 
  if [[ -f $mydir/scripts/test_helper.bash ]]; then
    . $mydir/scripts/test_helper.bash
    init_envs
  fi

  # For old httpfs.sh
  if [[ $HTTPFS_SSL_ENABLED == true ]]; then
    local httpfs_opts="-config conf/ssl-server.xml"
  fi

  # For old kms.sh
  if [[ $KMS_SSL_ENABLED == true ]]; then
    local kms_opts="-config conf/ssl-server.xml"
  fi

  [[ -n $start_hdfs ]] && $action-dfs.sh
  [[ -n $start_yarn ]] && $action-yarn.sh
  [[ -n $start_httpfs ]] && httpfs.sh $action $httpfs_opts
  [[ -n $start_kms ]] && kms.sh $action $kms_opts
}

copy_conf() {
  conf=$1
  if [[ -z $conf ]]; then
    echo "Not changing configuration"
    return
  fi
  if [[ ! -d $HADOOP_CONF_DIR ]]; then
    echo "The Hadoop config dir '$HADOOP_CONF_DIR' does not exist" >&2
    exit
  fi
  if [[ -d $HADOOP_CONF_DIR.original ]]; then
    echo "Restoring $HADOOP_CONF_DIR from $HADOOP_CONF_DIR.original"
    rm -fr $HADOOP_CONF_DIR
    cp -a $HADOOP_CONF_DIR.original $HADOOP_CONF_DIR
  else
    echo "Saving $HADOOP_CONF_DIR to $HADOOP_CONF_DIR.original"
    cp -a $HADOOP_CONF_DIR $HADOOP_CONF_DIR.original
  fi
  echo "Copying $conf to $HADOOP_CONF_DIR"
  cp $conf/* $HADOOP_CONF_DIR
}

if (( $# == 0 )); then
  usage
  exit
fi

while (( $# > 0 )); do
  case $1 in
    -h|--help)
      usage
      exit
      ;;
    kill|stop)
      pseudo_dist_mode stop
      jps
      ;;
    restart)
      pseudo_dist_mode stop
      copy_conf "$2"
      pseudo_dist_mode start
      jps
      shift # past argument
      ;;
    start)
      copy_conf "$2"
      pseudo_dist_mode start
      jps
      shift # past argument
      ;;
    -*)
      echo "Unknown option '$1'" >&2
      exit 1
      ;;
    *)
      echo "Unknown sub-command '$1'" >&2
      exit 1
      break
  esac
  shift
done
